{"version":3,"file":"bundle-addActor.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,iBAAiB;AAC1C,2BAA2B,uBAAuB;AAClD,sBAAsB,kBAAkB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,YAAY,sEAAsE;AAClF;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://programming-5/./src/main/js/util/csrf.js","webpack://programming-5/webpack/bootstrap","webpack://programming-5/webpack/runtime/define property getters","webpack://programming-5/webpack/runtime/hasOwnProperty shorthand","webpack://programming-5/webpack/runtime/make namespace object","webpack://programming-5/./src/main/js/addActor.js"],"sourcesContent":["export const header = document.querySelector(\"meta[name=\\\"_csrf_header\\\"]\").content;\nexport const token = document.querySelector(\"meta[name=\\\"_csrf\\\"]\").content;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { header, token } from \"./util/csrf.js\";\n\nconst titleInput = document.getElementById(\"actorName\");\nconst nationalityInput = document.getElementById(\"nationality\");\nconst genderInput = document.getElementById(\"gender\");\nconst addButton = document.getElementById(\"addButton\");\n\nconsole.log(\"add actor class\")\nasync function addNewActor() {\n    console.log(\"addNewFilm response done\");\n\n    const xmlData = `\n        <actor>\n            <actorName>${titleInput.value}</actorName>\n            <nationality>${nationalityInput.value}</nationality>\n            <gender>${genderInput.value}</gender>\n        </actor>\n    `;\n\n    const response = await fetch('/api/addActor', {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/xml\",\n            \"Content-Type\": \"application/xml\",\n            [header]: token\n        },\n        body: xmlData\n    });\n\n    if (response.status === 201) {\n        window.location.replace(\"/actors\");\n        console.log(\"fetched\");\n\n        const actorXml = await response.text();\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(actorXml, \"text/xml\");\n\n        const actor = {\n            id: xmlDoc.querySelector(\"id\").textContent,\n            actorName: xmlDoc.querySelector(\"actorName\").textContent,\n            nationality: xmlDoc.querySelector(\"nationality\").textContent,\n            gender: xmlDoc.querySelector(\"gender\").textContent\n        };\n\n        addFilmToHtmlTable(actor);\n    } else {\n        alert(\"Something went wrong!\");\n        console.log(\"issue with adding the actor to the table\");\n    }\n}\n\n\nconst actorTableBody = document.getElementById(\"actor_table\");\n\n/**\n * @param {{id: number, actorName: string, nationality: string, gender: string }} actor\n */\nfunction addFilmToHtmlTable(actor) {\n    const tableRow = document.createElement(\"tr\");\n    tableRow.id = `actor_${actor.id}`;\n    tableRow.innerHTML = `\n        <td>\n            <a>${actor.actorName}</a>\n        </td>\n    `\n    actorTableBody.appendChild(tableRow);\n    console.log(actorTableBody)\n}\n\naddButton?.addEventListener(\"click\", addNewActor);\n"],"names":[],"sourceRoot":""}