{"version":3,"file":"bundle-extraFilmInfo.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN+C;;AAE/C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD,aAAa;AACpE;AACA;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,2DAA2D,kBAAkB;AAC7E,cAAc,WAAW,gCAAgC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C,8BAA8B,aAAa;AAC3C,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,uDAAuD,kBAAkB;AACzE;AACA;AACA;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA","sources":["webpack://programming-5/./src/main/js/util/csrf.js","webpack://programming-5/webpack/bootstrap","webpack://programming-5/webpack/runtime/define property getters","webpack://programming-5/webpack/runtime/hasOwnProperty shorthand","webpack://programming-5/webpack/runtime/make namespace object","webpack://programming-5/./src/main/js/extraFilmInfo.js"],"sourcesContent":["export const header = document.querySelector(\"meta[name=\\\"_csrf_header\\\"]\").content;\nexport const token = document.querySelector(\"meta[name=\\\"_csrf\\\"]\").content;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { header, token } from \"./util/csrf.js\";\n\nconst deleteButtons = document.querySelectorAll('button.btn-outline-danger');\n\nfor (const deleteButton of deleteButtons) {\n    deleteButton.addEventListener(\"click\", handleDeleteFilm);\n}\n\nconst filmId = document.getElementById(\"filmId\")\n\nasync function handleDeleteFilm() {\n    console.log(\"deleting...\")\n    console.log(filmId);\n    const response = await fetch(`/api/extraFilmInfo/${filmId.value}`, {\n        method: \"DELETE\",\n        headers: {\n            [header]: token\n        }\n    })\n    if (response.status === 204) {\n        console.log(\"Method delete is successful\")\n        window.location.replace(\"/films\")\n    }\n}\n\nconst filmIdInput = document.getElementById(\"filmId\");\nconst toggleFilmsButton = document.getElementById(\"buttonActorsInFilms\");\nconst actorsTable = document.getElementById(\"actorsInFilms\");\nconst buttonWrapper = document.getElementById(\"dropdownButtonWrapper\");\nconst tableBody = document.getElementById(\"film_casting_table\");\n\nasync function toggleActorsTable() {\n    if (actorsTable.style.display === \"table\") {\n        hideActorsTable();\n    } else {\n        const response = await fetch(`/api/extraFilmInfo/${filmIdInput.value}/actors`,\n            { headers: { \"Accept\": \"application/json\" } });\n        if (response.status === 200) {\n            const actors = await response.json();\n            tableBody.innerHTML = '';\n            for (const actor of actors) {\n                tableBody.innerHTML += `\n                    <tr>\n                        <td>${actor.actorName}</td>\n                        <td>${actor.gender}</td>\n                        <td>${actor.nationality}</td>\n                    </tr>\n                `;\n            }\n            showActorsTable();\n        }\n    }\n}\n\nfunction hideActorsTable() {\n    actorsTable.style.display = \"none\";\n    buttonWrapper.classList.remove(\"dropup\");\n    if (!buttonWrapper.classList.contains(\"dropdown\")) {\n        buttonWrapper.classList.add(\"dropdown\");\n    }\n}\n\nfunction showActorsTable() {\n    actorsTable.style.display = \"table\";\n    buttonWrapper.classList.remove(\"dropdown\");\n    if (!buttonWrapper.classList.contains(\"dropup\")) {\n        buttonWrapper.classList.add(\"dropup\");\n    }\n}\n\ntoggleFilmsButton.addEventListener(\"click\", toggleActorsTable);\n\nconst boxOfficeText = document.getElementById(\"boxOffice\");\nconst genreText = document.getElementById(\"genre\");\nconst releaseYearText = document.getElementById(\"releaseYear\");\n\n/**\n * @type {HTMLButtonElement}\n */\nconst updateButton = document.getElementById(\"updateButton\");\n\nasync function changeFilm() {\n    console.log(filmIdInput.value)\n    const response = await fetch(`/api/extraFilmInfo/${filmIdInput.value}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            [header]: token\n        },\n        body: JSON.stringify({\n            year: releaseYearText.value,\n            boxOffice: boxOfficeText.value,\n            genre: genreText.value\n        })\n    })\n    if (response.status === 204) {\n        console.log(\"success\")\n    } else {\n        alert('Something went wrong!');\n    }\n}\n\nupdateButton?.addEventListener(\"click\", changeFilm);\n"],"names":[],"sourceRoot":""}