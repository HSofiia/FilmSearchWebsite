{"version":3,"file":"bundle-addFilm.js","mappings":";;;;;;;;;;;;;;;AAAO;AACA;;;;;;;UCDP;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iDAAM,GAAG,gDAAK;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;;AAGA;;AAEA;AACA,YAAY,gFAAgF;AAC5F;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://programming-5/./src/main/js/util/csrf.js","webpack://programming-5/webpack/bootstrap","webpack://programming-5/webpack/runtime/define property getters","webpack://programming-5/webpack/runtime/hasOwnProperty shorthand","webpack://programming-5/webpack/runtime/make namespace object","webpack://programming-5/./src/main/js/addFilm.js"],"sourcesContent":["export const header = document.querySelector(\"meta[name=\\\"_csrf_header\\\"]\").content;\nexport const token = document.querySelector(\"meta[name=\\\"_csrf\\\"]\").content;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { header, token } from \"./util/csrf.js\";\n\nconst titleInput = document.getElementById(\"filmName\");\nconst yearInput = document.getElementById(\"year\");\nconst boxOfficeInput = document.getElementById(\"boxOffice\");\nconst genreInput = document.getElementById(\"genre\");\nconst addButton = document.getElementById(\"addButton\");\n// const addButton = document.querySelector(\"button btn-primary\");\nconsole.log(\"add film class\")\nasync function addNewFilm() {\n\n    console.log(\"addNewFilm response done\")\n    const response = await fetch('/api/addFilm', {\n        method: \"POST\",\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n            [header]: token\n        },\n        body: JSON.stringify({\n            filmName: titleInput.value,\n            year: yearInput.value,\n            boxOffice: boxOfficeInput.value,\n            genre: genreInput.value\n        })\n    });\n\n    if (response.status === 201) {\n        window.location.replace(\"/films\")\n        console.log(\"fetched\")\n        /**\n         * @type {{id: number, filmName: string, year: number, boxOffice: number,genre: string }}\n         */\n        const film = await response.json();\n        addFilmToHtmlTable(film);\n    }\n    else {\n        alert(\"Something went wrong!\"); // alerts are \"bad\"...\n        console.log(\"issue with adding the film to the table\")\n    }\n}\n\n\nconst filmTableBody = document.getElementById(\"film_table\");\n\n/**\n * @param {{id: number, filmName: string, year: number, boxOffice: number, genre: string }} film\n */\nfunction addFilmToHtmlTable(film) {\n    const tableRow = document.createElement(\"tr\");\n    tableRow.id = `film_${film.id}`;\n    tableRow.innerHTML = `\n        <td>\n            <a>${film.filmName}</a>\n        </td>\n    `\n    filmTableBody.appendChild(tableRow);\n    console.log(filmTableBody)\n}\n\naddButton?.addEventListener(\"click\", addNewFilm);\n"],"names":[],"sourceRoot":""}